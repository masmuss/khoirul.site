---
export const prerender = true;

import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import Button from "@/components/Button.astro";
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/post/PostPreview.astro";
import PageLayout from "@/layouts/BaseLayout.astro";
import { getAllPosts, getUniqueTags, sortMDByDate } from "@/lib/utils";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueTags = getUniqueTags(allPostsByDate);

	return uniqueTags.flatMap((tag) => {
		const filterPosts = allPostsByDate.filter((post) => post.data.tags.includes(tag));
		return paginate(filterPosts, {
			pageSize: 10,
			params: { tag },
		});
	});
};

interface Props {
	page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Posts",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Posts →",
			url: page.url.next,
		},
	}),
};
---

<PageLayout
	title=`Tag: ${tag}`
	description=`View all posts with the tag - ${tag}`
	pageType="website"
>
	<div class="w-full">
		<Button title="Back" href="/blog" style="button">
			<span class="iconify ri--arrow-left-long-line" slot="icon-before"></span>
		</Button>
		<h1 class="mt-5 mb-6 flex items-end gap-x-2 text-2xl font-bold">
			Tags: #{tag}
		</h1>
		<section aria-label="Blog post list">
			<ul class="flex flex-col gap-y-3 text-start">
				{page.data.map((p) => <PostPreview as="h2" post={p} withDesc />)}
			</ul>
			<Pagination {...paginationProps} />
		</section>
	</div>
</PageLayout>
