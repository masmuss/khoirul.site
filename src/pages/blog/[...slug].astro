---
import { type CollectionEntry, render } from "astro:content";
import RelatedPost from "@/components/post/RelatedPost.astro";
import TOC from "@/components/post/TOC.astro";
import PostLayout from "@/layouts/BlogPost.astro";
import { getPosts, getRelatedPosts } from "@/lib/utils/post";
import type { CollectionPosts } from "@/types";

type Props = {
	post: CollectionEntry<"post">;
};

export async function getStaticPaths() {
	const posts = await getPosts();

	return posts.map((post: CollectionPosts) => {
		return {
			params: { slug: post.slug },
			props: {
				post,
			},
		};
	});
}

const { post } = Astro.props;

const { Content, headings } = await render(post);
const relatedPosts = await getRelatedPosts(post.data.tags, post.data.title, 4);
---

<PostLayout post={post}>
	<div class:list={["mt-8 grid grid-cols-1", headings.length > 0 && "md:grid-cols-[20%_auto]"]}>
		{
			headings.length > 0 && (
				<aside class="hidden flex-col gap-12 md:flex">
					<div class="sticky top-24 hidden self-start transition-all duration-200 md:block">
						<TOC {headings} />
					</div>
				</aside>
			)
		}

		<article class="w-full max-w-full space-y-12">
			<div class="custom-prose mx-auto">
				<Content />
			</div>

			<footer>
				<RelatedPost relatedPosts={relatedPosts} />
			</footer>
		</article>
	</div>
</PostLayout>
