---
import type { CollectionEntry } from "astro:content";
import BlogHero from "@/components/post/Hero.astro";
import PageLayout from "@/layouts/BaseLayout.astro";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { description, title },
} = post;
---

<PageLayout title={title} description={description} pageType="article">
	<div class="w-full space-y-6">
		<div class="w-full md:flex md:items-center md:justify-center">
			<article class="max-w-5xl flex-grow break-words" data-pagefind-body>
				<div id="blog-hero"><BlogHero content={post} /></div>
				<div>
					<slot />
				</div>
			</article>
		</div>
		<button
			aria-label="Back to Top"
			class="bg-muted hover:border-border/75 fixed end-12 bottom-16 z-90 flex h-12 w-12 translate-y-28 items-center justify-center rounded-full text-2xl opacity-0 transition-all duration-300 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 md:end-16"
			data-show="false"
			id="to-top-btn"
		>
			<span class="iconify ri--arrow-up-line"></span>
		</button>
	</div>
</PageLayout>

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
