---
import { type CollectionEntry, render } from "astro:content";
import Button from "@/components/Button.astro";
import BlogHero from "@/components/post/Hero.astro";
import TOC from "@/components/post/TOC.astro";

import PageLayout from "@/layouts/BaseLayout.astro";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { description, title },
} = post;

const { headings } = await render(post);
---

<PageLayout title={title} description={description} pageType="article">
	<div class="w-full">
		<Button title="Back" href="/blog" style="button">
			<span class="iconify ri--arrow-left-long-line" slot="icon-before"></span>
		</Button>
		<div class="mt-8 gap-x-10 lg:flex lg:items-start">
			{!!headings.length && <TOC headings={headings} />}
			<article class="flex-grow break-words" data-pagefind-body>
				<div id="blog-hero"><BlogHero content={post} /></div>
				<div
					class="prose dark:prose-invert prose-headings:font-medium prose-headings:text-foreground prose-headings:before:absolute prose-headings:before:-ms-4 prose-th:before:content-none prose-blockquote:font-serif mt-12"
				>
					<slot />
				</div>
			</article>
		</div>
		<button
			aria-label="Back to Top"
			class="bg-primary-foreground hover:border-border/75 fixed end-4 bottom-10 z-90 flex h-8 w-8 translate-y-28 items-center justify-center rounded-full border-2 border-transparent text-2xl opacity-0 transition-all duration-300 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:end-8 sm:h-12 sm:w-12"
			data-show="false"
			id="to-top-btn"
		>
			<span class="iconify ri--arrow-up-line"></span>
		</button>
	</div>
</PageLayout>

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
