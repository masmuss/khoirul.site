---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import { getReadTimeCount } from "@/lib/utils";
import FormattedDate from "../FormattedDate.astro";

interface Props {
	content: CollectionEntry<"post">;
}

const { content } = Astro.props;

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

{
	content.data.image && (
		<div class="aspect-h-9 aspect-w-16 mb-6">
			<Image
				alt={content.data.image.alt}
				class="rounded-2xl object-cover"
				fetchpriority="high"
				loading="eager"
				src={content.data.image.src}
				width={1920}
				height={1080}
			/>
		</div>
	)
}
{content.data.draft ? <span class="text-red-500">(Draft)</span> : null}
<div class="flex flex-wrap items-center gap-x-3 gap-y-2">
	<p class="text-xs">
		<FormattedDate date={new Date(content.data.date)} dateTimeOptions={dateTimeOptions} /> /{" "}
		{getReadTimeCount(content.body!)} min read
	</p>
</div>
<h1 class="mt-2 text-3xl font-medium sm:mb-1">
	{content.data.title}
</h1>

{
	!!content.data.tags?.length && (
		<div class="mt-3 flex flex-row items-center gap-x-1">
			<span class="iconify carbon--tag-group" />
			{content.data.tags.map((tag, i) => (
				<div>
					<a
						aria-label={`View more blogs with the tag ${tag}`}
						class="inline-block before:content-['#'] hover:underline hover:underline-offset-4"
						data-pagefind-filter="tag"
						href={`/tags/${tag}/`}
					>
						{tag}
					</a>
					{i < content.data.tags.length - 1 && ", "}
				</div>
			))}
		</div>
	)
}

<!-- {
	data.updatedDate && (
		<p class='mt-6 text-base'>
			Last Updated:
			<FormattedDate class='ms-1' date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
		</p>
	)
} -->
