<theme-toggle class="ms-2 sm:ms-4">
	<button
		id="toggleDarkMode"
		class="border-seashell-200 hover:bg-border dark:border-woodsmoke-800 relative flex items-center justify-center rounded-md border p-1.5 transition-all"
		aria-label="Toggle Dark Mode"
	>
		<span class="iconify ri--sun-line dark:hidden"></span>
		<span class="iconify ri--moon-line hidden dark:inline-block"></span>
	</button>
</theme-toggle>

<script>
	// Note that if you fire the theme-change event outside of this component, it will not be reflected in the button's aria-checked attribute. You will need to add an event listener if you want that.
	import { rootInDarkMode } from "@/lib/utils/domElement";

	class ThemeToggle extends HTMLElement {
		constructor() {
			super();
			const button = this.querySelector<HTMLButtonElement>("button");

			if (button) {
				// set aria role value
				button.setAttribute("role", "switch");
				button.setAttribute("aria-checked", String(rootInDarkMode()));

				// button event
				button.addEventListener("click", () => {
					// invert theme
					let themeChangeEvent = new CustomEvent("theme-change", {
						detail: {
							theme: rootInDarkMode() ? "light" : "dark",
						},
					});
					// dispatch event -> ThemeProvider.astro
					document.dispatchEvent(themeChangeEvent);

					// set the aria-checked attribute
					button.setAttribute("aria-checked", String(rootInDarkMode()));
				});
			} else {
				console.warn("Theme Toggle: No button found");
			}
		}
	}

	customElements.define("theme-toggle", ThemeToggle);
</script>
